name: Docs

on:
  push:
    branches: [ develop, release ]
    paths:
    - 'docs/**'
    - 'mkdocs.yml'
    - 'readthedocs.yml'
  pull_request_target:
    branches: [ develop ]
    paths:
    - 'docs/**'
    - 'mkdocs.yml'
    - 'readthedocs.yml'

jobs:
  accessibility:
    if: contains(toJson(github.event.commits), '[ci skip]') == false
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Setup Node.js environment
      uses: actions/setup-node@main

    - name: poetry cache
      uses: actions/cache@v2
      with:
        path: .venv
        key: ${{ runner.os }}-${{ hashFiles('poetry.lock') }}-${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install poetry
        poetry config --local virtualenvs.in-project true
        poetry install --no-root --remove-untracked
        npm install pa11y pa11y-reporter-junit

    - name: Start docs server
      run: poetry run mkdocs serve &

    - name: Accessibility testing (Pa11y)
      run: poetry run .github/workflows/pa11y.sh

    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results (pa11y)
        path: reports/pa11y/*.xml

  publish-test-results:
    if: success() || failure()
    name: "Publish Unit Tests Results"
    needs: accessibility
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Unit Test Results
          hide_comments: all but latest
          comment_on_pr: true
          files: '**/*.xml'
          report_individual_runs: true
          deduplicate_classes_by_file_name: false

